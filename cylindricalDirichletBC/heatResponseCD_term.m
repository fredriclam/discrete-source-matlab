% Eigenfunction term in isothermal cylinder heat release function.
% Summation performed in heatResponseCD_summation.
%  -r: target coordinate r
%  -r0: source coordinate r0
%  -diff_t: t-t0
%  -diff_th: theta-theta0
%  -b: cylinder radius
%  -m: summation index m
%  -n: summation index n
%  -alpha: besselj roots table (generated by
%    heatResponseCD_construct_alpha)
%  return: eigenfunction term

function value = heatResponseCD_term(r, r0, diff_t, diff_th, b, m, n, ...
    alpha)
al = alpha(m+1,n);
xi = al/b; % eigenvalue
value = besselj(m,xi*r0) ...
        * besselj(m,xi*r) ...
        / (besselj(m+1, al)).^2 ...
        * exp(-xi.^2*diff_t) ...
        * cos(m*diff_th);
    
% Draft
% value = besselj(m,alpha(m+1,n)*r0/b) ...
%         * besselj(m,alpha(m+1,n)*r/b) ...
%         / (bessel_derivative(m, alpha(m+1,n))).^2 ...
%         * exp(-alpha(m+1,n).^2 * (diff_t)) ...
%         * cos(m * (diff_th));
    
if m == 0 % Important! m = 0 case
    value = value/2;
end
return

% function value = bessel_derivative(m, arg)
% if m == 0
%     value = -besselj(1,arg);
% elseif m > 0
%     value = 0.5*(besselj(m-1,arg) - besselj(m+1,arg));
% else
%     error 'wtf';
% end
% return
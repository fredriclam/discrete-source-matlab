% Isothermal cylinder heat release function
%  -x: target coordinate (cartesian)
%  -y:
%  -z:
%  -x0: source coordinate (cartesian)
%  -y0:
%  -z0:
%  -t0: source ignite time
%  -b: cylinder radius
%  -M: max summation index m
%  -N: max summation index n
%  -alpha: besselj roots table (generated by ICHR_construct_alpha)
%  return: heat release value

function value = ICHR_cartesian(x, y, z, t, x0, y0, z0, t0, b, M, N, alpha)

% Smallest value of t to consider
CUTOFF_T = 1e-9;

% Difference in t
diff_t = t-t0;
if diff_t <= CUTOFF_T
    value = 0;
    return
end

% Convert cartesian coordinates to polar
% Angular difference w.r.t. cylinder axis
diff_th = atan2(y,x) - atan2(y0,x0);
% Difference in z
diff_z = z-z0; 
% Distances from cylinder axis
r = sqrt(x.^2 + y.^2);
r0 = sqrt(x0.^2 + y0.^2);

% Return value from subfunctions
persistent coeff;
coeff = 1/pi/sqrt(pi)/b^2;
value = coeff ...
    / sqrt(diff_t) ...
    * exp(-diff_z.^2/4./diff_t) ...
    * ICHR_omega(r, r0, diff_t, diff_th, b, M, N, alpha);

% Draft value
% value = 1/pi^2/b^2 ...
%     / sqrt(4*pi*diff_t) ...
%     * exp(-diff_z.^2/4./diff_t) ...
%     * ICHR_omega(r, r0, diff_t, diff_th, b, M, N);
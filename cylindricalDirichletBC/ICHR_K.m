% Eigenfunction term in isothermal cylinder heat release function
%  -r: target coordinate r
%  -r0: source coordinate r0
%  -diff_t: t-t0
%  -diff_th: theta-theta0
%  -b: cylinder radius
%  -m: summation index m
%  -n: summation index n
%  -alpha: besselj roots table (generated by ICHR_construct_alpha)
%  return: eigenfunction term

function value = ICHR_K(r, r0, diff_t, diff_th, diff_z, b, M, N, alpha, f)

if nargin < 10
    f = 1;
end

sum = 0;
for m = 0:M
    for n = 1:N
        if f == 1
            eta = sqrt((n^2)/(N^2));
%             eta = sqrt((m^2)/(M^2));
%             eta = sqrt((m^2+n^2)/(M^2+N^2));

            % Sinc filter
            filter = sin(pi* eta) / (pi* eta);

%             % Raised cosine
%             filter = 0.5*(1+cos(pi*eta));

%             % Exponential filter
%             falpha = log(eps);
%             eta_c = 1;
%             p = 2;
%             if eta <= eta_c
%                 filter = 1;
%             else
%                 filter = exp(-falpha*((eta-eta_c)/(1-eta_c))^p);
%             end
            
        else
            filter = 1;
        end
        
        term = ICHR_term(r, r0, diff_t, diff_th, b, m, n, alpha)* ...
            filter;
        
        sum = sum + term;
    end
end

% Return value from subfunctions
coeff = 1/pi/sqrt(pi)/b^2;
value = coeff ...
    / sqrt(diff_t) ...
    * exp(-diff_z.^2/4./diff_t) ...
    * sum;
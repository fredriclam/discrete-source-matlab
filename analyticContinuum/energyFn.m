% Energy function
function [total_change_rate, far_field_change_rate, near_field_change_rate] = energyFn(u, xi)

%% Near inf for term_2
large = 50;

%% Direct energy rate
% First term that needs to be integrated to x -> -inf
term_1 = @(tau,t,u,xi) ((2.*exp(-xi.^2./(4.*(t - tau))) - 2).* ...
    (u + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) + ...
    ((2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - ...
    2.*exp(-(u.^2.*(tau + 1).^2)./(4.*(t - tau)))).*...
    (t - tau).^(1./2))./pi.^(1./2) - u.*erf((u.*(tau + 1))./...
    (2.*(t - tau).^(1./2))).*(tau + 1)))./(4.*pi.^(1./2).*(t - tau).^(1./2));
% Second term that decays rapidly as x -> -inf, but to avoid numerical
% precision error, cut off
term_2 = @(tau,t,u,xi) -(exp(-(u.^2.*(2.*tau.^2 + 2.*tau + 1))./(4.*(t - tau))).*...
    (exp((u.^2.*tau.^2)./(4.*(t - tau))) - exp((u.^2.*(tau + 1).^2)./...
    (4.*(t - tau)))).*(2.*xi.*erf(xi./(2.*(t - tau).^(1./2))) + ...
    ((4.*exp(-xi.^2./(4.*(t - tau))) - 4).*(t - tau).^(1./2))./pi.^(1./2)))./...
    (4.*pi.^(1./2).*(t - tau).^(1./2));

% Incorrect half-slab term
% term_1 = @(tau,t,u,xi) ((2.*exp(-xi.^2./(16.*(t - tau))) - 2).*...
%     (u + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) + ...
%     ((2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - ...
%     2.*exp(-(u.^2.*(tau + 1).^2)./(4.*(t - tau)))).*...
%     (t - tau).^(1./2))./pi.^(1./2) - u.*erf((u.*(tau + 1))./...
%     (2.*(t - tau).^(1./2))).*(tau + 1)))./(4.*pi.^(1./2).*(t - tau).^(1./2));
% term_2 = @(tau,t,u,xi) -(exp(-(u.^2.*(2.*tau.^2 + 2.*tau + 1))./(4.*(t - tau))).*...
%     (exp((u.^2.*tau.^2)./(4.*(t - tau))) - exp((u.^2.*(tau + 1).^2)./...
%     (4.*(t - tau)))).*(xi.*erf(xi./(4.*(t - tau).^(1./2))) + ...
%     ((4.*exp(-xi.^2./(16.*(t - tau))) - 4).*...
%     (t - tau).^(1./2))./pi.^(1./2)))./(4.*pi.^(1./2).*(t - tau).^(1./2));
far_field_change_rate = ...
    integral(@(tau) term_1(tau, 0, u, xi), -Inf, -1) + ...
    integral(@(tau) term_2(tau, 0, u, xi), -large, -1);
% % Works fine, numerically unstable
% far_rate_per_source = @(tau,t,u,xi) ((2.*exp(-xi.^2./(16.*(t - tau))) - 2).*...
%     (u + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) + ...
%     ((2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - ...
%     2.*exp(-(u.^2.*(tau + 1).^2)./(4.*(t - tau)))).*...
%     (t - tau).^(1./2))./pi.^(1./2) - u.*erf((u.*(tau + 1))./...
%     (2.*(t - tau).^(1./2))).*(tau + 1)))./(4.*pi.^(1./2).*(t - tau).^(1./2)) - ...
%     (exp(-(u.^2.*(2.*tau.^2 + 2.*tau + 1))./(4.*(t - tau))).*...
%     (exp((u.^2.*tau.^2)./(4.*(t - tau))) - exp((u.^2.*(tau + 1).^2)./...
%     (4.*(t - tau)))).*(xi.*erf(xi./(4.*(t - tau).^(1./2))) + ...
%     ((4.*exp(-xi.^2./(16.*(t - tau))) - 4).*...
%     (t - tau).^(1./2))./pi.^(1./2)))./(4.*pi.^(1./2).*(t - tau).^(1./2));
% far_field_change_rate = integral(@(tau) ...
%     far_rate_per_source(tau, 0, u, xi), -large, -1)

% Near field reaction+dissipation
near_rate_per_source = @(tau,t,u,x) ((2.*exp(-xi.^2./(4.*(t - tau))) - 2).*(u.*(t - tau) - u.*tau.*erf((t.*u)./(2.*(t - tau).^(1./2))) + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) - ((2.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) - 2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau)))).*(t - tau).^(1./2))./pi.^(1./2)))./(4.*pi.^(1./2).*(t - tau).^(1./2)) + ((2.*xi.*erf(xi./(2.*(t - tau).^(1./2))) + ((4.*exp(-xi.^2./(4.*(t - tau))) - 4).*(t - tau).^(1./2))./pi.^(1./2)).*(t.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - t.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) + tau.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) - tau.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) + (t.^2.*u.^2.*exp(-(t.^2.*u.^2)./(4.*(t - tau))))./2 + u.^2.*tau.^2.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) + u.*pi.^(1./2).*(t - tau).^(3./2) - (3.*t.*u.^2.*tau.*exp(-(t.^2.*u.^2)./(4.*(t - tau))))./2))./(4.*pi.^(1./2).*(t - tau).^(3./2));

% Half-slab, something wrong
% near_rate_per_source = @(tau,t,u,xi) ((2.*exp(-xi.^2./(16.*(t - tau))) - 2).*(u.*(t - tau) - u.*tau.*erf((t.*u)./(2.*(t - tau).^(1./2))) + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) - ((2.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) - 2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau)))).*(t - tau).^(1./2))./pi.^(1./2)))./(4.*pi.^(1./2).*(t - tau).^(1./2)) + ((xi.*erf(xi./(4.*(t - tau).^(1./2))) + ((4.*exp(-xi.^2./(16.*(t - tau))) - 4).*(t - tau).^(1./2))./pi.^(1./2)).*(t.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - t.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) + tau.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) - tau.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) + (t.^2.*u.^2.*exp(-(t.^2.*u.^2)./(4.*(t - tau))))./2 + u.^2.*tau.^2.*exp(-(t.^2.*u.^2)./(4.*(t - tau))) + u.*pi.^(1./2).*(t - tau).^(3./2) - (3.*t.*u.^2.*tau.*exp(-(t.^2.*u.^2)./(4.*(t - tau))))./2))./(4.*pi.^(1./2).*(t - tau).^(3./2));
% ((2.*exp(-xi.^2./(16.*(t - tau))) - 2).*(u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) - u.*tau + ((2.*exp(-(u.^2.*tau.^2)./4) - 2).*(t - tau).^(1./2))./pi.^(1./2)))./(4.*pi.^(1./2).*(t - tau).^(1./2)) - ((xi.*erf(xi./(4.*(t - tau).^(1./2))) + ((4.*exp(-xi.^2./(16.*(t - tau))) - 4).*(t - tau).^(1./2))./pi.^(1./2)).*(t - tau - exp(-(u.^2.*tau.^2)./4).*(t - tau) + (u.^2.*tau.^2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))))./2))./(4.*pi.^(1./2).*(t - tau).^(3./2));
near_field_change_rate = integral(@(tau) ...
    near_rate_per_source(tau, 0, u, xi), -1, 0); % Integrate d{tau} from -1 to 0 (defined almost everywhere)

% %% Wrong! Doesn't -> infty as xi -> infty
% % Energy time rate of change per source time
% far_rate_per_source = @(tau,t,u,xi) (exp(-(xi.^2 + 4.*u.^2.*tau.^2)./(16.*(t - tau))) - ...
%     exp(-(u.^2.*tau.^2)./(4.*(t - tau))) +  ...
%     exp(-(u.^2.*(tau + 1).^2)./(4.*(t - tau))) - ...
%     exp(-(xi.^2 + 4.*u.^2.*tau.^2 + 8.*u.^2.*tau + 4.*u.^2)./(16.*(t - tau))))./pi + ...
%     ((exp(-xi.^2./(16.*(t - tau))) - 1).*(u + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) +...
%     ((2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - ...
%     2.*exp(-(u.^2.*(tau + 1).^2)./(4.*(t - tau)))).*(t - tau).^(1./2))./pi.^(1./2) -...
%     u.*erf((u.*(tau + 1))./(2.*(t - tau).^(1./2))).*(tau + 1)))./(2.*pi.^(1./2).*(t - tau).^(1./2)) + ...
%     (xi.^2.*exp(-xi.^2./(16.*(t - tau))).*(u + u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) + ...
%     ((2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))) - ...
%     2.*exp(-(u.^2.*(tau + 1).^2)./(4.*(t - tau)))).*(t - tau).^(1./2))./pi.^(1./2) -...
%     u.*erf((u.*(tau + 1))./(2.*(t - tau).^(1./2))).*(tau + 1)))./(16.*pi.^(1./2).*(t - tau).^(3./2));
% % Integrated energy rate
% far_field_change_rate = integral(@(tau) ...
%     far_rate_per_source(tau, -h, u, xi), -Inf, -1);
% 
% % Near field energy change rate
% near_rate_per_source = @(tau, t, u, xi) ((exp(-xi.^2./(16.*(t - tau))) - 1).*...
%     (u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) - ...
%     u.*tau + ((2.*exp(-(u.^2.*tau.^2)./4) - 2).*...
%     (t - tau).^(1./2))./pi.^(1./2)))./(2.*pi.^(1./2).*(t - tau).^(1./2)) -...
%     ((exp(-xi.^2./(16.*(t - tau))) - 1).*(t - tau - exp(-(u.^2.*tau.^2)./4).*(t - tau) +...
%     (u.^2.*tau.^2.*exp(-(u.^2.*tau.^2)./(4.*(t - tau))))./2))./(pi.*(t - tau)) +...
%     (xi.^2.*exp(-xi.^2./(16.*(t - tau))).*(u.*tau.*erf((u.*tau)./(2.*(t - tau).^(1./2))) - ...
%     u.*tau + ((2.*exp(-(u.^2.*tau.^2)./4) - 2).*...
%     (t - tau).^(1./2))./pi.^(1./2)))./(16.*pi.^(1./2).*(t - tau).^(3./2));
% near_field_change_rate = integral(@(tau) ...
%     near_rate_per_source(tau, -h, u, xi), -1, -h);
% 


%% Energy formulation
% % Energy function
% h = 1e-4;
% % integrand_far = @(tau,t,u,xi) 1/sqrt(pi) .* ( ...
% %     1/sqrt(pi) .* sqrt(4*(t-tau)) .* (exp(-(u.*tau).^2 .* 0.25 ./ (t-tau)) - ...
% %     exp(-(u.*(tau+1)).^2 * 0.25 ./ (t-tau))) - ...
% %     u .* tau .* erf(-u.*tau ./ sqrt(4*(t-tau))) + ...
% %     u .* (tau+1) .* erf(-u.*(tau+1) ./ sqrt(4*(t-tau))) + ...
% %     u) .* ...
% %     sqrt(t-tau) .* (exp(-xi.^2*0.0625./(t-tau))-1);
% % diff_integrand_far = @(tau,t,u,xi) ...
% %     (...
% %     integrand_far(tau+h,t,u,xi) - integrand_far(tau-h,t,u,xi) ...
% %     )/(2*h);
% 
% integrand_near = @(tau,t,u,xi) 1/sqrt(pi) .* ( ...
%     1/sqrt(pi) .* sqrt(4*(t-tau)) .* (exp(-(u.*tau).^2 .* 0.25 ./ (t-tau))-1)-...
%     u .* tau .* erf(-u.*tau ./ sqrt(4*(t-tau))) - ...
%     u .* tau) .* ...
%     sqrt(t-tau) .* (exp(-xi.^2.*0.0625./(t-tau))-1);
% diff_integrand_near = @(tau,t,u,xi) ...
%     (...
%     integrand_near(tau+h,t,u,xi) - integrand_near(tau-h,t,u,xi) ...
%     )/(2*h);
% 
% TRUNC = 8000;
% I1 = integral(@(tau) diff_integrand_far(tau,-0.0001,u,xi), -TRUNC, -1)
% I2 = integral(@(tau) diff_integrand_near(tau,-0.0001,u,xi), -1, -0.0002)
% 
% energy_rate = -(I1 + I2); % ?? 

total_change_rate = near_field_change_rate + far_field_change_rate;
